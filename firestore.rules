rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================================================
    // HELPER FUNCTIONS
    // ============================================================================
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isDriver(driverId) {
      return isAuthenticated() && request.auth.uid == driverId;
    }
    
    // ============================================================================
    // DEVELOPMENT MODE - ALLOW ALL ACCESS
    // WARNING: Change these rules before deploying to production!
    // ============================================================================
    
    // KOMMUTERS COLLECTION (Registration)
    match /kommuters/{kommuterId} {
      // Anyone authenticated can read (for admin panel)
      allow read: if isAuthenticated();
      
      // Users can create their own registration
      allow create: if isAuthenticated();
      
      // Only admins or the owner can update
      allow update: if isAuthenticated();
      
      // Only admins can delete
      allow delete: if isAuthenticated();
      
      // List all for admin panel
      allow list: if isAuthenticated();
    }
    
    // DRIVER ALERTS COLLECTION
    match /driver_alerts/{alertId} {
      // Authenticated users can read alerts
      allow read: if isAuthenticated();
      
      // Drivers can create their own alerts
      allow create: if isAuthenticated();
      
      // Admins and drivers can update alerts
      allow update: if isAuthenticated();
      
      // Only admins can delete
      allow delete: if isAuthenticated();
      
      // List all for admin panel
      allow list: if isAuthenticated();
    }
    
    // DRIVER TRACKING (Real-time location)
    match /driver_tracking/{driverId} {
      // Anyone authenticated can read for safety monitoring
      allow read: if isAuthenticated();
      
      // Only the driver can update their location
      allow create, update: if isAuthenticated() && driverId == request.auth.uid;
      
      // List all for admin monitoring
      allow list: if isAuthenticated();
    }
    
    // DRIVER TRACKING SESSIONS (Alert tracking)
    match /driver_tracking_sessions/{sessionId} {
      // Anyone authenticated can read for safety monitoring
      allow read: if isAuthenticated();
      
      // Admins and system can create/update tracking sessions
      allow create, update: if isAuthenticated();
      
      // Only admins can delete
      allow delete: if isAuthenticated();
      
      // List all for admin monitoring
      allow list: if isAuthenticated();
    }
    
    // 911 CALLS (Emergency calls)
    match /alert_911_calls/{callId} {
      // Anyone authenticated can read for emergency monitoring
      allow read: if isAuthenticated();
      
      // Admins can create 911 calls
      allow create, update: if isAuthenticated();
      
      // Only admins can delete
      allow delete: if isAuthenticated();
      
      // List all for admin monitoring
      allow list: if isAuthenticated();
    }
    
    // KOMMUTER SECURITY SETTINGS (Security questions)
    match /kommuter_security_settings/{kommuterId} {
      // Kommuters can read their own settings
      allow read: if isAuthenticated();
      
      // Kommuters can create/update their own settings
      allow create, update: if isAuthenticated();
      
      // Only admins can delete
      allow delete: if isAuthenticated();
      
      // List for admin panel
      allow list: if isAuthenticated();
    }
    
    // ============================================================================
    // PRODUCTION RULES (COMMENTED OUT FOR DEVELOPMENT)
    // Uncomment these rules and remove the development rule above for production
    // ============================================================================
    
    /*
    // KOMMUTE ROUTES
    match /kommute_routes/{routeId} {
      allow get: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow list: if isAuthenticated();
    }
    
    // KOMMUTE TRIPS
    match /kommute_trips/{tripId} {
      allow get: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow list: if isAuthenticated();
    }
    
    // TRACKING POINTS
    match /kommute_tracking_points/{pointId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated();
      allow list: if isAuthenticated();
      allow update: if false;
    }
    
    // TRIP CHAINS
    match /kommute_trip_chains/{chainId} {
      allow get: if isAuthenticated() && resource.data.driverId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.driverId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.driverId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.driverId == request.auth.uid;
      allow list: if isAuthenticated();
    }
    
    // TRIP QUEUE
    match /kommute_trip_queue/{entryId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
      allow list: if isAuthenticated();
    }
    
    // DRIVER AVAILABILITY
    match /kommute_driver_availability/{driverId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated() && driverId == request.auth.uid;
      allow delete: if isAuthenticated() && driverId == request.auth.uid;
      allow list: if isAuthenticated();
    }
    
    // ANALYTICS (Read-only for users, write for system)
    match /kommute_analytics/{docId} {
      allow read: if isAuthenticated();
      allow write: if false;
      allow list: if isAuthenticated();
    }
    
    // DEFAULT DENY ALL
    match /{document=**} {
      allow read, write: if false;
    }
    */
  }
}
